openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Voting
- name: UserStory
- name: SessionManagement
  description: Poker planning session
paths:
  /api/userstory/sessions/{sessionId}:
    get:
      tags:
      - UserStory
      operationId: fetchUserStories
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserStory'
    post:
      tags:
      - UserStory
      operationId: createUserStory
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserStory'
  /api/sessions:
    get:
      tags:
      - SessionManagement
      operationId: fetchSessions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanningSession'
    post:
      tags:
      - SessionManagement
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanningSession'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
  /api/sessions/{sessionId}/voting:
    get:
      tags:
      - Voting
      operationId: findVotesBySession
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voting'
    post:
      tags:
      - Voting
      operationId: emitVote
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voting'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/sessions/{sessionId}/members:
    get:
      tags:
      - SessionManagement
      operationId: findMembersBySessionId
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    post:
      tags:
      - SessionManagement
      operationId: createMembers
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Member'
  /api/stopVote/{sessionId}:
    get:
      tags:
      - Voting
      operationId: stopVote
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/startVote/{sessionId}:
    get:
      tags:
      - Voting
      operationId: startVote
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/sessions/{sessionId}:
    get:
      tags:
      - SessionManagement
      operationId: findSessionById
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
    delete:
      tags:
      - SessionManagement
      operationId: deleteSessionById
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/sessions/{sessionId}/member/{memberId}:
    get:
      tags:
      - SessionManagement
      operationId: findMemberBySessionId
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: memberId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - SessionManagement
      operationId: deleteMemberBySessionId
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: memberId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/userstory/sessions/{userStoryId}:
    delete:
      tags:
      - UserStory
      operationId: createUserStory_1
      parameters:
      - name: userStoryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UserStory:
      type: object
      properties:
        userStoryId:
          type: integer
          format: int32
        userStorydesc:
          type: string
        sessionId:
          type: string
          format: uuid
          writeOnly: true
    PlanningSession:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
        title:
          type: string
    Session:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
        title:
          type: string
        location:
          type: string
          format: uri
    Voting:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userStoryId:
          type: string
        sessionId:
          type: string
          format: uuid
          writeOnly: true
    Member:
      type: object
      properties:
        memberId:
          type: integer
          format: int32
        name:
          type: string
        session:
          $ref: '#/components/schemas/PlanningSession'
